CREATE VIEW int_exchange_view AS
  WITH T AS (SELECT E.*,
  SCH.NAME AS SCHEMA_VAL,
  SYS.ID AS SYSTEM_ID,
  SYS.NAME AS SYSTEM_VAL,
  USR.LAST_NAME || ' ' || LEFT(USR.FIRST_NAME, 1) || '.' AS AUTHOR_VAL,
  STA.NAME AS STATUS_VAL,
  STN.ID AS NOTE_STATUS_ID,
  CON.ID AS CONSUMER_ID
            FROM INT_EXCHANGE E
               INNER JOIN SYS_SCHEMA SCH ON SCH.ID = E.SCHEMA_ID
               LEFT JOIN SYS_SYSTEM SYS ON SYS.ID = SCH.PROVIDER_ID
               LEFT JOIN SYS_DICTIONARY STA ON STA.ID = E.STATUS_ID
               LEFT JOIN INT_ROUTE ROU ON SCH.ID = ROU.SCHEMA_ID
               LEFT JOIN SYS_SYSTEM CON ON CON.ID = ROU.CONSUMER_ID
               LEFT JOIN SYS_USER USR ON USR.ID = E.AUTHOR_ID
               LEFT JOIN SYS_DICTIONARY STN ON STN.ARTICLE_VALUE =
            (CASE
               WHEN E.STARTED IS NULL AND E.FINISHED IS NULL THEN 'canceled'
               WHEN E.STARTED IS NOT NULL AND E.FINISHED IS NULL THEN 'waiting'
               WHEN E.STARTED IS NOT NULL AND E.FINISHED IS NOT NULL THEN 'approved'
            END)
               WHERE 1=1
            )
  SELECT T.* FROM T
;


CREATE VIEW int_exchange_note_view AS
SELECT
N.*,
E.SCHEMA_ID,
SCH.NAME AS SCHEMA_VAL,
TYP.NAME AS TYPE_VAL,
USR.LAST_NAME || ' ' || LEFT(USR.FIRST_NAME,1) || '.' AS EDITOR_VAL,
STA.NAME AS STATUS_VAL,
CAST( EXTRACT(EPOCH FROM (COALESCE(N.UPDATED, N.CREATED) - N.CREATED)) AS INTEGER) AS APPROVING_INTERVAL
FROM INT_EXCHANGE_NOTE N
	INNER JOIN INT_EXCHANGE E ON E.ID = N.EXCHANGE_ID
	INNER JOIN SYS_SCHEMA SCH ON SCH.ID = E.SCHEMA_ID
	INNER JOIN SYS_USER USR ON USR.ID = N.EDITOR_ID
	INNER JOIN SYS_DICTIONARY TYP ON TYP.ID = N.TYPE_ID
	INNER JOIN SYS_DICTIONARY STA ON STA.ID = N.STATUS_ID
WHERE 1=1
;